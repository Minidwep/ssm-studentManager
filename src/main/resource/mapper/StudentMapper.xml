<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minidwep.crud.dao.StudentMapper">
    <resultMap id="BaseResultMap" type="com.minidwep.crud.bean.Student">
        <id column="student_id" jdbcType="INTEGER" property="studentId"/>
        <result column="student_number" jdbcType="INTEGER" property="studentNumber"/>
        <result column="student_age" jdbcType="INTEGER" property="studentAge"/>
        <result column="student_gender" jdbcType="CHAR" property="studentGender"/>
        <result column="student_birth" jdbcType="DATE" property="studentBirth"/>
        <result column="classes_id" jdbcType="INTEGER" property="classesId"/>
        <result column="student_name" jdbcType="VARCHAR" property="studentName"/>
        <result column="student_mobile" jdbcType="VARCHAR" property="studentMobile"/>
    </resultMap>
    <resultMap id="WithClassBaseResultMap" type="com.minidwep.crud.bean.Student">
        <id column="student_id" jdbcType="INTEGER" property="studentId"/>
        <result column="student_number" jdbcType="INTEGER" property="studentNumber"/>
        <result column="student_age" jdbcType="INTEGER" property="studentAge"/>
        <result column="student_gender" jdbcType="CHAR" property="studentGender"/>
        <result column="student_birth" jdbcType="DATE" property="studentBirth"/>
        <result column="classes_id" jdbcType="INTEGER" property="classesId"/>
        <result column="student_name" jdbcType="VARCHAR" property="studentName"/>
        <result column="student_mobile" jdbcType="VARCHAR" property="studentMobile"/>
        <association property="classes" javaType="com.minidwep.crud.bean.Classes">
            <id column="classes_id" jdbcType="INTEGER" property="classesId" />
            <result column="classes_name" jdbcType="VARCHAR" property="classesName" />
            <result column="classes_date" jdbcType="VARCHAR" property="classesDate" />
            <result column="classes_specialty" jdbcType="VARCHAR" property="classesSpecialty" />
            <result column="classes_direction" jdbcType="VARCHAR" property="classesDirection" />
        </association>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    student_id, student_number, student_age, student_gender, student_birth, classes_id,
    student_name, student_mobile
  </sql>

    <sql id="WithClassBase_Column_List">
    tbl_student.student_id, tbl_student.student_number, tbl_student.student_age, tbl_student.student_gender, tbl_student.student_birth, tbl_student.classes_id,
    student_name, student_mobile , c.classes_id, c.classes_name, c.classes_date, c.classes_specialty, c.classes_direction
  </sql>


    <select id="selectWithClassesByExample" parameterType="com.minidwep.crud.bean.StudentExample" resultMap="WithClassBaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="WithClassBase_Column_List"/>
        from tbl_student left JOIN tbl_classes  c ON tbl_student.classes_id = c.classes_id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByExample" parameterType="com.minidwep.crud.bean.StudentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tbl_student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>



    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tbl_student
        where student_id = #{studentId,jdbcType=INTEGER}
    </select>



    <select id="selectWithClassesByPrimaryKey" parameterType="java.lang.Integer"
            resultMap="WithClassBaseResultMap">
        select
        <include refid="WithClassBase_Column_List"/>
        from tbl_student  left JOIN tbl_classes  c ON tbl_student.classes_id = c.classes_id
        where student_id = #{studentId,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tbl_student
    where student_id = #{studentId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.minidwep.crud.bean.StudentExample">
        delete from tbl_student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.minidwep.crud.bean.Student">
    insert into tbl_student (student_id, student_number, student_age, 
      student_gender, student_birth, classes_id, 
      student_name, student_mobile)
    values (#{studentId,jdbcType=INTEGER}, #{studentNumber,jdbcType=INTEGER}, #{studentAge,jdbcType=INTEGER}, 
      #{studentGender,jdbcType=CHAR}, #{studentBirth,jdbcType=DATE}, #{classesId,jdbcType=INTEGER}, 
      #{studentName,jdbcType=VARCHAR}, #{studentMobile,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.minidwep.crud.bean.Student">
        insert into tbl_student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentId != null">
                student_id,
            </if>
            <if test="studentNumber != null">
                student_number,
            </if>
            <if test="studentAge != null">
                student_age,
            </if>
            <if test="studentGender != null">
                student_gender,
            </if>
            <if test="studentBirth != null">
                student_birth,
            </if>
            <if test="classesId != null">
                classes_id,
            </if>
            <if test="studentName != null">
                student_name,
            </if>
            <if test="studentMobile != null">
                student_mobile,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentId != null">
                #{studentId,jdbcType=INTEGER},
            </if>
            <if test="studentNumber != null">
                #{studentNumber,jdbcType=INTEGER},
            </if>
            <if test="studentAge != null">
                #{studentAge,jdbcType=INTEGER},
            </if>
            <if test="studentGender != null">
                #{studentGender,jdbcType=CHAR},
            </if>
            <if test="studentBirth != null">
                #{studentBirth,jdbcType=DATE},
            </if>
            <if test="classesId != null">
                #{classesId,jdbcType=INTEGER},
            </if>
            <if test="studentName != null">
                #{studentName,jdbcType=VARCHAR},
            </if>
            <if test="studentMobile != null">
                #{studentMobile,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.minidwep.crud.bean.StudentExample" resultType="java.lang.Long">
        select count(*) from tbl_student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tbl_student
        <set>
            <if test="record.studentId != null">
                student_id = #{record.studentId,jdbcType=INTEGER},
            </if>
            <if test="record.studentNumber != null">
                student_number = #{record.studentNumber,jdbcType=INTEGER},
            </if>
            <if test="record.studentAge != null">
                student_age = #{record.studentAge,jdbcType=INTEGER},
            </if>
            <if test="record.studentGender != null">
                student_gender = #{record.studentGender,jdbcType=CHAR},
            </if>
            <if test="record.studentBirth != null">
                student_birth = #{record.studentBirth,jdbcType=DATE},
            </if>
            <if test="record.classesId != null">
                classes_id = #{record.classesId,jdbcType=INTEGER},
            </if>
            <if test="record.studentName != null">
                student_name = #{record.studentName,jdbcType=VARCHAR},
            </if>
            <if test="record.studentMobile != null">
                student_mobile = #{record.studentMobile,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tbl_student
        set student_id = #{record.studentId,jdbcType=INTEGER},
        student_number = #{record.studentNumber,jdbcType=INTEGER},
        student_age = #{record.studentAge,jdbcType=INTEGER},
        student_gender = #{record.studentGender,jdbcType=CHAR},
        student_birth = #{record.studentBirth,jdbcType=DATE},
        classes_id = #{record.classesId,jdbcType=INTEGER},
        student_name = #{record.studentName,jdbcType=VARCHAR},
        student_mobile = #{record.studentMobile,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.minidwep.crud.bean.Student">
        update tbl_student
        <set>
            <if test="studentNumber != null">
                student_number = #{studentNumber,jdbcType=INTEGER},
            </if>
            <if test="studentAge != null">
                student_age = #{studentAge,jdbcType=INTEGER},
            </if>
            <if test="studentGender != null">
                student_gender = #{studentGender,jdbcType=CHAR},
            </if>
            <if test="studentBirth != null">
                student_birth = #{studentBirth,jdbcType=DATE},
            </if>
            <if test="classesId != null">
                classes_id = #{classesId,jdbcType=INTEGER},
            </if>
            <if test="studentName != null">
                student_name = #{studentName,jdbcType=VARCHAR},
            </if>
            <if test="studentMobile != null">
                student_mobile = #{studentMobile,jdbcType=VARCHAR},
            </if>
        </set>
        where student_id = #{studentId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.minidwep.crud.bean.Student">
    update tbl_student
    set student_number = #{studentNumber,jdbcType=INTEGER},
      student_age = #{studentAge,jdbcType=INTEGER},
      student_gender = #{studentGender,jdbcType=CHAR},
      student_birth = #{studentBirth,jdbcType=DATE},
      classes_id = #{classesId,jdbcType=INTEGER},
      student_name = #{studentName,jdbcType=VARCHAR},
      student_mobile = #{studentMobile,jdbcType=VARCHAR}
    where student_id = #{studentId,jdbcType=INTEGER}
  </update>
</mapper>